name: CI devops 2022 CPE
on:
  #to begin you want to launch this job in main and develop
  push:
    branches:
      # Pour la branche master
      - master
  pull_request:
jobs:
  test-backend:
    runs-on: ubuntu-18.04
    env:
      working-directory: ./API/simple-api
    steps:
      #checkout your github code using actions/checkout@v2.3.3
      - uses: actions/checkout@v2.3.3
      #do the same with another action (actions/setup-java@v2) that enable to setup jdk 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          # On utilise la version 11 avec la distribution adopt
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Analyze with sonar
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=1c6a274c-6721-477b-b100-4dd4cad0218c -Dsonar.organization=962bde7e-6cb4-4bbf-8a53-f5b1616deaf1 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{secrets.SONAR_TOKEN }} --file ./API/simple-api
      #finally build your app with the latest command
      # - name: Build and test with Maven
        # build and test the java project
        # run: mvn clean verify --file ./API/simple-api
  
  # define job to build and publish docker image
  build-and-push-docker-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    # steps to perform in job
    steps:
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build image and push backend
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./API/simple-api
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/simple-api:1.0
          push: ${{ github.ref == 'refs/heads/master' }}
      - name: Build image and push database
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./Database
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/my-database:1.0
          push: ${{ github.ref == 'refs/heads/master' }}
      - name: Build image and push httpd
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./HTTP server
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/http:1.0
          push: ${{ github.ref == 'refs/heads/master' }}